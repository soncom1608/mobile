const en = {
  common: {
    ok: "OK!",
    save: "Save",
    confirm: "Confirm",
    update: "Update",
    cancel: "Cancel",
    back: "Back",
    logOut: "Log Out", // @demo remove-current-line
    success: "Success",
    error: "Error",
    warning: "Warning",
    info: "Info",
    delete: "Delete",
    createSuccess: "Successful application creation",
    notAssigned: "Not Assigned",
    administrative: "Administrative",
    close: "Close",
    lat: "Latitude",
    long: "Longitude",
  },
  welcomeScreen: {
    postscript:
      "psst  â€” This probably isn't what your app looks like. (Unless your designer handed you these screens, and in that case, ship it!)",
    readyForLaunch: "Your app, almost ready for launch!",
    exciting: "(ohh, this is exciting!)",
    letsGo: "Let's go!", // @demo remove-current-line
  },
  errorScreen: {
    title: "Something went wrong!",
    friendlySubtitle:
      "This is the screen that your users will see in production when an error is thrown. You'll want to customize this message (located in `app/i18n/en.ts`) and probably the layout as well (`app/screens/ErrorScreen`). If you want to remove this entirely, check `app/app.tsx` for the <ErrorBoundary> component.",
    reset: "RESET APP",
    traceTitle: "Error from %{name} stack", // @demo remove-current-line
  },
  emptyStateComponent: {
    generic: {
      heading: "So empty... so sad",
      content: "No data found yet. Try clicking the button to refresh or reload the app.",
      button: "Let's try this again",
    },
  },
  // @demo remove-block-start
  errors: {
    invalidEmail: "Invalid email address.",
  },
  HomeScreen: {
    NameApp: "TimeKeeping",
    InforPatrol: "Inform Patrol",
    Explanation: "Explanation",
    labelHello: "Hello",
    explaination: "Explain",
    status: "Status :",
    placeName: "Place name :",
    listStaffOrg: "Organization staff List",
    numberPlace: "Organization place number :",
    numberAddToday: "Today organization added place number :",
  },
  settingScreen: {
    headerText: "Profile",
    employ: "Employee Detail",
    logout: "Log out",
    datecount: "Date count",
    yearsummary: "Year summary",
    contact: "Address and Contact",
    language: "Language",
    user: "USER",
    username: "username",
    orgId: "orgnatization id",
    role: "Role",
    settings: "SETTINGS",
    password: "Password",
    accInfo: "Account Infomation",
    fullName: "Full name",
    addr: "Address",
    email: "Email",
    birthday: "Birth day",
    dateStartWork: "Date start work",
    phoneNumber: "Phone number",
    code: "Code",
    gender: "Gender",
    lateOfMonth: "Number of times of being late in the month",
    lateOfYear: "Number of times tardy in 1 year",
    updateInfo: "Update infomation",
    changePassword: "Change password",
    verInfo: "Version infomation",
    modify: "This field is not modify",
    updateAvt: "Update Avatar",
    camera: "Camera",
    library: "Choose from library",
    save: "Save",
    curentPassword: "Curent password",
    curentPasswordMessage: "Please enter curent password!",
    newPassword: "New password",
    newPasswordMessage: "Please enter new password!",
    retypePassword: "Retype password",
    retypePasswordMessage: "Please retype password!",
    passwordMessage: "retype password incorrect!",
    required: "This field is required",
    updateSuccessful: "Update successful!",
    cancel: "Cancel",
  },
  loginScreen: {
    signIn: "Sign In",
    enterDetails:
      "Enter your details below to unlock top secret info. You'll never guess what we've got waiting. Or maybe you will; it's not rocket science here.",
    emailFieldLabel: "Email",
    passwordFieldLabel: "Password",
    emailFieldPlaceholder: "Enter your email address",
    passwordFieldPlaceholder: "Super secret password here",
    tapToSignIn: "Tap to sign in!",
    hint: "Hint: you can use any email address and your favorite password :)",
    savePassWord: "Save password",
  },
  navigator: {
    HomeTab: "Home",
    QRTab: "Patrol",
    Setting: "Settings",
    Notification: "Notification",
  },
  QRScreen: {
    startPatrolIn: "Start patrol in ",
    allowPossitin: "Allow patrol on this postion!",
    checkConditional: "Please check all conditional before patrol",
    errTime1: "It is not time to patrol in this area yet, the time starts at: ",
    errTime2: " and ends at: ",
    errTime3: "Date allow patrol",
    errDistance1: "You are at a distance from the patrol position ",
    errDistance2: ", Are you sure you want to patrol here, the patrol allowed radius is ",
    wrongAddress: "Wrong address ",
    allowedAddress: "Allowed Addresses are: ",
    yourAddress: "Your network address",
    yourMacAddress: "Mac address router",
    allowedNetwork: "Allowed Network is: ",
    allowedNetworkName: "Allowed Network name is: ",
    yourNetworkName: "Your network name: ",
    startPatrol: "Start patrol!",
    endPatrol: "End patrol!",
    changePlace: "Change place info ?",
    placeInfo: "Current place info, would you like to update place?",
    currentListPlaces: "Orginazation's places list :",
    allPlacesCheck: "ALL",
    placesUncheck: "UnCheck",
    placesChecked: "Checked",
  },
  AttendanceScreen: {
    headerAttendance: "Schedule",
    namePlace: "Name place : ",
    time: "Time : ",
  },
  DivisionScreen: {
    headerDivision: " Devision",
    StaffList: " Staff List  ",
    fromDate: "From date :",
    toDate: "To date :",
    weeksDevision: "Week devision :",
    devision: "Devision",
  },
  // @demo remove-block-end
}

export default en
export type Translations = typeof en
